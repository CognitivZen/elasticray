<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="com.thoughtworks.qdox"
		module="qdox"
		revision="1.12.1"
		status="release"
		publication="20121104224339"
	>
		<license name="The Apache Software License, Version 2.0" url="http://www.apache.org/licenses/LICENSE-2.0.txt" />
		<description homepage="http://qdox.codehaus.org">
		QDox is a high speed, small footprint parser for extracting class/interface/method definitions from source files
    complete with JavaDoc @tags. It is designed to be used by active code generators or documentation tools.
		</description>
		<m:properties__timestamp>${maven.build.timestamp}</m:properties__timestamp>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:properties__codehausDistMgmtSnapshotsUrl>https://nexus.codehaus.org/content/repositories/snapshots/</m:properties__codehausDistMgmtSnapshotsUrl>
		<m:properties__xsite.sourceDirectoryPath>${project.build.directory}/generated-site</m:properties__xsite.sourceDirectoryPath>
		<m:properties__maven.build.timestamp.format>yyyy-MM-dd</m:properties__maven.build.timestamp.format>
		<m:maven.plugins>org.apache.maven.plugins__maven-enforcer-plugin__1.0|org.apache.maven.plugins__maven-enforcer-plugin__1.0|null__maven-clean-plugin__2.5|null__maven-surefire-plugin__2.4.2|null__maven-jar-plugin__2.4|null__maven-install-plugin__2.2|null__maven-deploy-plugin__2.3|de.jflex__maven-jflex-plugin__1.4.3|null__maven-antrun-plugin__1.3|org.apache.maven.plugins__maven-compiler-plugin__2.0.2|org.apache.maven.plugins__maven-javadoc-plugin__2.4|org.apache.maven.plugins__maven-assembly-plugin__2.2-beta-5|null__maven-site-plugin__3.2|org.codehaus.xsite__xsite-maven-plugin__1.0|null__maven-resources-plugin__2.3|org.apache.maven.plugins__maven-release-plugin__2.3.2</m:maven.plugins>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="qdox" type="jar" ext="jar" conf="master"/>
		<artifact name="qdox" type="source" ext="jar" conf="sources" m:classifier="sources"/>
		<artifact name="qdox" type="javadoc" ext="jar" conf="javadoc" m:classifier="javadoc"/>
	</publications>
	<dependencies>
		<dependency org="ant" name="ant" rev="1.5.1" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="junit" name="junit" rev="3.8.1" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="jmock" name="jmock" rev="1.0.0" force="true" conf="test->runtime(*),master(*)"/>
	</dependencies>
</ivy-module>
